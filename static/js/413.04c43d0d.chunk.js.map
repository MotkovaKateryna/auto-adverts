{"version":3,"file":"static/js/413.04c43d0d.chunk.js","mappings":"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","sources":["constants/baseTheme.js","modules/CarCard/CarCard.styled.js","modules/CarsList/CarsList.styled.js","pages/FavoritesPage/FavoritesPage.jsx","pages/HomePage/HomePage.styled.js","redux/adverts/advert-selectors.js","shared/Modal/Modal.styled.js","shared/Modal/Modal.jsx","shared/ModalCard/ModalCard.styled.js","shared/ModalCard/ModalCard.jsx"],"sourcesContent":["export const baseTheme = {\n    colors: {\n      white: '#FFFFFF',\n      darkwhite: '#F7F7FB',\n      black: '#28130e',\n      blue: '#3470FF',\n      darkblue: '#0B44CD',\n      orange: '#fe9a00',\n      grey: '#8A8A89',\n      borderGrey: '#F3F3F2',\n      overlayBcg: 'rgba(18, 20, 23, 0.50)',\n    },\n    animation: {\n      duration: '0.25s',\n      cubicBezier: 'cubic-bezier(0.4, 0, 0.2, 1)',\n    },\n  };","import styled from 'styled-components';\nimport { baseTheme } from '../../constants/baseTheme';\n\nimport { FaRegHeart } from 'react-icons/fa';\nimport { FaHeart } from 'react-icons/fa6';\n\nexport const StyledCardWrap = styled.li`\n  /* width: 274px; */\n`;\nexport const StyledImg = styled.img`\n    width: 100%;\n  height: 268px;\n  object-fit: cover;\n\n  border-radius: 14px;\n`\n\n\nexport const StyledImageThumb = styled.div`\nposition: relative;\n\n\n\n`;\n\nexport const FavoriteButton = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n\n  background-color: transparent;\n  border: none;\n\n  cursor: pointer;\n`;\n\nexport const FavoriteEmptyIcon = styled(FaRegHeart)`\n  height: 18px;\n  width: 18px;\n\n  color: white;\n`;\n\nexport const FavoriteIcon = styled(FaHeart)`\n  height: 18px;\n  width: 18px;\n  color: #3470ff;\n`;\n\nexport const InfoWrap = styled.div`\n  padding: 14px 0 28px 0;\n`;\n\nexport const Button = styled.button`\nwidth: 100%;\n  color: ${baseTheme.colors.white};\n  font-size: 14px;\n  font-weight: 600;\n  line-height: calc(20 / 16);\n  padding: 12px 50px;\n  border: none;\n  border-radius: 12px;\n  background-color: ${baseTheme.colors.blue};\n  transition: background-color 250ms ${baseTheme.animation.cubicBezier};\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background-color: ${baseTheme.colors.darkblue};\n  }\n`;\n\nexport const Title = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 8px;\n\n  & p {\n    color: ${baseTheme.colors.black};\n    font-size: 16px;\n    font-weight: 500;\n    line-height: calc(24 / 16);\n  }\n\n  & span {\n    color: ${baseTheme.colors.blue};\n  }\n`;\n\n\nexport const Description = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  row-gap: 4px;\n  height: 40px;\n  overflow: hidden;\n\n  & p {\n    color: rgba(18, 20, 23, 0.5);\n    font-size: 12px;\n    line-height: calc(18 / 12);\n  }\n\n  & p:not(:last-child) {\n    padding-right: 6px;\n    border-right: 1px solid rgba(18, 20, 23, 0.1);\n  }\n\n  & p:not(:first-child) {\n    padding-left: 6px;\n  }\n`;\n\n\nexport const ButtonRent = styled.a`\n  color: ${baseTheme.colors.white};\n  text-decoration: none;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: calc(20 / 16);\n  padding: 12px 50px;\n  border: none;\n  border-radius: 12px;\n  background-color: ${baseTheme.colors.blue};\n  transition: background-color 250ms ${baseTheme.animation.cubicBezier};\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background-color: ${baseTheme.colors.darkblue};\n  }\n`;","import styled from 'styled-components';\n\nexport const StyledListWrap = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 29px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;","import React, { useEffect, useState } from 'react';\nimport { Container } from 'pages/HomePage/HomePage.styled';\nimport { useSelector } from 'react-redux';\nimport { getAllAdverts } from '../../redux/adverts/advert-selectors';\nimport { Button, ButtonRent, Description, FavoriteButton, FavoriteEmptyIcon, FavoriteIcon, InfoWrap, StyledCardWrap, StyledImageThumb, StyledImg, Title } from 'modules/CarCard/CarCard.styled';\nimport { StyledListWrap } from 'modules/CarsList/CarsList.styled';\nimport Modal from 'shared/Modal/Modal';\nimport { ModalCard } from 'shared/ModalCard/ModalCard';\n// import { CatalogWrap } from './CatalogPage.styled';\n\nconst FavoritesPage = () => {\n  const [selectedCar, setSelectedCar] = useState(null);\n  const [favorites, setFavorites] = useState(() => {\n    const savedFavorites = localStorage.getItem('favorites');\n    return savedFavorites ? JSON.parse(savedFavorites) : [];\n  });\n  const adverts = useSelector(getAllAdverts);\n  const [modalOpen, setModalOpen] = useState(false);\n\n  const toggleFavorite = id => {\n    setFavorites(prevFavorites => {\n      const isFavorite = prevFavorites.includes(id);\n      if (isFavorite) {\n        return prevFavorites.filter(favId => favId !== id);\n      } else {\n        return [...prevFavorites, id];\n      }\n    });\n  };\n  \n  useEffect(() => {\n    localStorage.setItem('favorites', JSON.stringify(favorites));\n  }, [favorites]);\n  const openModal = (car) => {\n    setSelectedCar(car);\n    setModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setModalOpen(false);\n  };\n  \n  const favoriteCars = adverts.filter(advert => favorites.includes(advert.id));\n\n  return (\n    <Container>\n      {/* <CatalogWrap> */}\n      <h1>Favorite Cars</h1>\n      <StyledListWrap>\n        \n      {favoriteCars.length > 0 ? (\n        favoriteCars.map((car) => {\n          const [city, country] = car.address.split(',').slice(-2);\n          return (\n            <StyledCardWrap key={car.id}>\n            <StyledImageThumb>\n                        <StyledImg src={car.img} alt={`${car.make} ${car.model}`} />\n                      <FavoriteButton\n                          type=\"button\"\n                          onClick={() => toggleFavorite(car.id)}\n                        >\n                        {favorites.includes(car.id) ? (\n                            <FavoriteIcon />\n                          ) : (\n                            <FavoriteEmptyIcon />\n                          )}\n                        </FavoriteButton>\n                       </StyledImageThumb>\n                      <InfoWrap>\n                      <Title>\n                         <p>\n                          {`${car.make} `}\n                           <span>{`${car.model}, `}</span>\n                           {car.year}\n                        </p>\n                        <p>{car.rentalPrice}</p>\n                      </Title>\n                      <Description>\n                        <p>{city}</p>\n                        <p>{country}</p>\n                     <p>{car.rentalCompany}</p>\n                         <p>{car.type}</p>\n                         <p>{car.model}</p>\n                      <p>{car.mileage}</p>\n                        <p>{car.functionalities[0]}</p>\n                       </Description>\n                    </InfoWrap>\n                    <Button type=\"button\" onClick={() => openModal(car)}>\n                     Learn more\n                     </Button>\n                       </StyledCardWrap>\n          );\n        })\n      ) : (\n        <p>No cars in the favorites list yet.</p>\n      )}\n     {modalOpen && selectedCar && (\n        <Modal close={closeModal}>\n          <ModalCard car={selectedCar}/>\n          <ButtonRent  href=\"tel:+380730000000\" >Rental car\n            </ButtonRent>\n        </Modal>\n      )}\n     </StyledListWrap>\n        \n      {/* </CatalogWrap> */}\n    </Container>\n  );\n};\n\nexport default FavoritesPage;\n\n\n\n// return (\n//   <Container>\n//     {/* <CatalogWrap> */}\n//     <h1>Favorite Cars</h1>\n//     <StyledListWrap>\n      \n//     {favoriteCars.map(\n//       (car) => {\n//         const [city, country] = car.address.split(',').slice(-2);\n//         return (\n//           <StyledCardWrap key={car.id}>\n//           <StyledImageThumb>\n//             <StyledImg src={car.img} alt={`${car.make} ${car.model}`} />\n//             <FavoriteButton\n//               type=\"button\"\n//               onClick={() => toggleFavorite(car.id)}\n//             >\n//               {favorites.includes(car.id) ? (\n//                 <FavoriteIcon />\n//               ) : (\n//                 <FavoriteEmptyIcon />\n//               )}\n//             </FavoriteButton>\n//           </StyledImageThumb>\n//           <InfoWrap>\n//           <Title>\n//             <p>\n//               {`${car.make} `}\n//               <span>{`${car.model}, `}</span>\n//               {car.year}\n//             </p>\n//             <p>{car.rentalPrice}</p>\n//           </Title>\n//           <Description>\n//             <p>{city}</p>\n//             <p>{country}</p>\n//             <p>{car.rentalCompany}</p>\n//             <p>{car.type}</p>\n//             <p>{car.model}</p>\n//             <p>{car.mileage}</p>\n//             <p>{car.functionalities[0]}</p>\n//           </Description>\n//         </InfoWrap>\n//         <Button type=\"button\" onClick={() => openModal(car)}>\n//           Learn more\n//         </Button>\n//           </StyledCardWrap>\n//         )\n//       }\n//     )}\n//    {modalOpen && selectedCar && (\n//       <Modal close={closeModal}>\n//         <ModalCard car={selectedCar}/>\n//         <ButtonRent  href=\"tel:+380730000000\" class=\"btn\">Rental car\n//           </ButtonRent>\n//       </Modal>\n//     )}\n//    </StyledListWrap>\n      \n//     {/* </CatalogWrap> */}\n//   </Container>\n// );\n// };","import styled from 'styled-components';\nimport { baseTheme } from '../../constants/baseTheme';\n\nexport const Container = styled.div`\n  width: 320px;\n  margin: 0 auto;\n  padding: 0 16px;\n  \n  @media screen and (min-width: 768px) {\n      width: 768px;\n      padding: 0 20px;\n    }\n    \n    @media screen and (min-width: 1440px) {\n        width: 1440px;\n        padding: 0 30px;\n    }\n    `;\n\n    \n    export const HomeWrap = styled.div`\n      padding: 10px 0;\n    `;\n\n\nexport const HomePageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const CarImage = styled.img`\n  width: 100px;\n  height: 100px;\n  object-fit: cover;\n`;\n\nexport const ImageContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 10px;\n`;\n\nexport const RedirectButton = styled.button`\n  margin-top: 40px;\n  color: ${baseTheme.colors.white};\n  font-size: 14px;\n  font-weight: 600;\n  line-height: calc(20 / 16);\n  padding: 12px 50px;\n  border: none;\n  border-radius: 12px;\n  background-color: ${baseTheme.colors.blue};\n  transition: background-color 250ms ${baseTheme.animation.cubicBezier};\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background-color: ${baseTheme.colors.darkblue};\n  }\n`;\n","export const getAllAdverts = store => store.adverts.items;\n\nexport const getFilteredAdverts = ({ adverts, filter } ) => {\n    if (!filter) {\n      return adverts.items;\n    }\n    const normalizedFilter = filter.toLowerCase();\n    return adverts.items.filter(\n      ({ name, number }) =>\n        name.toLowerCase().includes(normalizedFilter) ||\n        number.includes(normalizedFilter)\n    );\n}\n\nexport const getIsLoading = state => state.adverts.isLoading;\n\nexport const getError = state => state.adverts.error;","import styled from 'styled-components';\nimport { baseTheme } from '../../constants/baseTheme';\n\nimport { HiX } from 'react-icons/hi';\n\nexport const StyledOverlay = styled.div`\n  position: fixed;\n    top: 0px;\n    left: 0px;\n    padding-top: 20px;\n    padding-bottom: 20px;\n    width: 100vw;\n    height: 100vh;\n    display: flex;\n    justify-content: center;\n    align-items: flex-start;\n    overflow-y: auto;\n    z-index: 1;\n    background-color: ${baseTheme.colors.overlayBcg};\n`;\n\n\nexport const StyledModal = styled.div`\n    width: 541px;\n    padding: 40px;\n    position: relative;\n    overflow-y: auto;\n    border-radius: 24px;\n    background-color: white;\n    \n`;\nexport const StyledCloseBtn = styled.div`\nposition: absolute;\n  top: 15px;\n  right: 15px;\n  cursor: pointer;\n  color: #3f51b5;\n  width: 24px;\n  height: 24px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\nexport const Button = styled.button`\n  color: ${baseTheme.colors.white};\n  font-size: 14px;\n  font-weight: 600;\n  line-height: calc(20 / 16);\n  padding: 12px 50px;\n  border: none;\n  border-radius: 12px;\n  background-color: ${baseTheme.colors.blue};\n  transition: background-color 250ms ${baseTheme.animation.cubicBezier};\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background-color: ${baseTheme.colors.darkblue};\n  }\n`;\n\nexport const CloseModalIcon = styled(HiX)`\n  position: absolute;\n  top: 16px;\n  right: 16px;\n  width: 24px;\n  height: 24px;\n  stroke: #121417;\n  cursor: pointer;\n`;","import { useEffect,useCallback } from 'react';\nimport { createPortal } from 'react-dom';\nimport { CgClose } from 'react-icons/cg';\nimport { StyledCloseBtn, StyledModal, StyledOverlay } from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst Modal = ({ children, close }) => {\n\n  const closeModal = useCallback(({ target, currentTarget, code }) => {\n    if (target === currentTarget || code === 'Escape') {\n      close();\n    }\n  },[close]);\n\n  useEffect(()=>{\n    window.addEventListener('keydown', closeModal);\n    return ()=> window.removeEventListener('keydown', closeModal);\n  },[closeModal])\n\n  return createPortal(\n    <StyledOverlay  onClick={closeModal}>\n      <StyledModal >\n        <StyledCloseBtn\n          type=\"button\"\n          aria-label=\"close button\"\n          onClick={close}\n        >\n          <CgClose />\n        </StyledCloseBtn>\n        {children}\n      </StyledModal>\n    </StyledOverlay>,\n    modalRoot\n  );\n}\nexport default Modal;\n","import styled from 'styled-components';\nimport { baseTheme } from '../../constants/baseTheme';\n\nexport const ImageThumb = styled.div`\n  overflow: hidden;\n  position: relative;\n  height: 248px;\n  border-radius: 14px;\n  background: ${baseTheme.colors.borderGrey};\n\n  & img {\n    width: 100%;\n    min-height: 248px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n  }\n`;\n\nexport const InfoWrap = styled.div`\n  padding: 14px 0 28px 0;\n\n  & h1 {\n    color: ${baseTheme.colors.black};\n    font-size: 18px;\n    font-weight: 500;\n    line-height: calc(24 / 18);\n    text-align: left;\n    margin-bottom: 8px;\n  }\n\n  & span {\n    color: ${baseTheme.colors.blue};\n  }\n\n  & h2 {\n    color: ${baseTheme.colors.black};\n    font-size: 14px;\n    font-weight: 500;\n    line-height: calc(20 / 14);\n    text-align: left;\n    margin-top: 24px;\n    margin-bottom: 8px;\n  }\n`;\n\nexport const MainInfo = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  /* row-gap: 4px; */\n  margin-bottom: 4px;\n\n  & p {\n    color: rgba(18, 20, 23, 0.5);\n    font-size: 12px;\n    line-height: calc(18 / 12);\n  }\n\n  & p:not(:last-child) {\n    padding-right: 6px;\n    border-right: 1px solid rgba(18, 20, 23, 0.1);\n  }\n\n  & p:not(:first-child) {\n    padding-left: 6px;\n  }\n`;\n\nexport const Description = styled.p`\n  margin-top: 14px;\n`;\n\nexport const AccessoriesWrap = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  /* row-gap: 4px; */\n  margin-bottom: 4px;\n\n  & p {\n    color: rgba(18, 20, 23, 0.5);\n    font-size: 12px;\n    line-height: calc(18 / 12);\n  }\n\n  & p:not(:last-child) {\n    padding-right: 6px;\n  }\n\n  & p:not(:first-child) {\n    padding-left: 6px;\n    border-left: 1px solid rgba(18, 20, 23, 0.1);\n  }\n`;\n\nexport const Options = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: left;\n  align-items: center;\n  gap: 8px;\n\n  & p {\n    padding: 7px 14px;\n    border-radius: 35px;\n    background: #f9f9f9;\n    font-family: 'Montserrat', sans-serif;\n    color: #363535;\n    font-size: 12px;\n    line-height: calc(18 / 12);\n    letter-spacing: -0.24px;\n  }\n\n  & span {\n    color: ${baseTheme.colors.blue};\n    font-weight: 600;\n  }\n`;","import { nanoid } from 'nanoid';\nimport {\n  InfoWrap,\n  ImageThumb,\n  MainInfo,\n  Description,\n  AccessoriesWrap,\n  Options,\n} from './ModalCard.styled';\n\nexport const ModalCard = ({ car }) => {\n  const {\n    id,\n    year,\n    make,\n    model,\n    img,\n    rentalPrice,\n    address,\n    type,\n    mileage,\n    accessories,\n    functionalities,\n    description,\n    rentalConditions,\n    fuelConsumption,\n    engineSize,\n  } = car;\n  const addrArray = address.split(',');\n  const country = addrArray[addrArray.length - 1];\n  const city = addrArray[addrArray.length - 2];\n\n  const idOptions = nanoid();\n\n  return (\n    <>\n      <ImageThumb>\n        <img src={img} alt={`${make} ${model}`} />\n      </ImageThumb>\n      <InfoWrap>\n        <h1>\n          {`${make} `}\n          <span>{`${model}, `}</span>\n          {year}\n        </h1>\n        <MainInfo>\n          <p>{city}</p>\n          <p>{country}</p>\n          <p>{`Id: ${id}`}</p>\n          <p>{`Year: ${year}`}</p>\n          <p>{`Type: ${type}`}</p>\n        </MainInfo>\n        <MainInfo>\n          <p>{`Fuel Consumption: ${fuelConsumption}`}</p>\n          <p>{`Engine Size: ${engineSize}`}</p>\n        </MainInfo>\n        <Description>{description}</Description>\n        <h2>Accessories and functionalities:</h2>\n        <AccessoriesWrap>\n          {accessories.map((item, index) => (\n            <p key={`${idOptions}${index}`}>{item}</p>\n          ))}\n        </AccessoriesWrap>\n        <AccessoriesWrap>\n          {functionalities.map((item, index) => (\n            <p key={`${idOptions}0${index}`}>{item}</p>\n          ))}\n        </AccessoriesWrap>\n        <h2>Rental Conditions: </h2>\n        <Options>\n          {rentalConditions.split('\\n').map((item, index) => (\n            <p key={`${idOptions}00${index}`}>\n              {index !== 0 ? (\n                item\n              ) : (\n                <>\n                  Minimum age: <span>{item.substr(13, 2)}</span>\n                </>\n              )}\n            </p>\n          ))}\n          <p>\n            Mileage: <span>{mileage}</span>\n          </p>\n          <p>\n            Price: <span>{rentalPrice}</span>\n          </p>\n        </Options>\n      </InfoWrap>\n    </>\n  );\n};"],"names":["baseTheme","colors","white","darkwhite","black","blue","darkblue","orange","grey","borderGrey","overlayBcg","animation","duration","cubicBezier","StyledCardWrap","styled","_templateObject","_taggedTemplateLiteral","StyledImg","_templateObject2","StyledImageThumb","_templateObject3","FavoriteButton","_templateObject4","FavoriteEmptyIcon","FaRegHeart","_templateObject5","FavoriteIcon","FaHeart","_templateObject6","InfoWrap","_templateObject7","Button","_templateObject8","Title","_templateObject9","Description","_templateObject10","ButtonRent","_templateObject11","StyledListWrap","_useState","useState","_useState2","_slicedToArray","selectedCar","setSelectedCar","_useState3","savedFavorites","localStorage","getItem","JSON","parse","_useState4","favorites","setFavorites","adverts","useSelector","getAllAdverts","_useState5","_useState6","modalOpen","setModalOpen","useEffect","setItem","stringify","favoriteCars","filter","advert","includes","id","_jsxs","Container","children","_jsx","length","map","car","_car$address$split$sl","address","split","slice","_car$address$split$sl2","city","country","src","img","alt","concat","make","model","type","onClick","prevFavorites","favId","_toConsumableArray","year","rentalPrice","rentalCompany","mileage","functionalities","openModal","Modal","close","ModalCard","href","HomePageContainer","CarImage","ImageContainer","RedirectButton","store","items","StyledOverlay","StyledModal","StyledCloseBtn","HiX","modalRoot","document","querySelector","_ref","closeModal","useCallback","_ref2","target","currentTarget","code","window","addEventListener","removeEventListener","createPortal","CgClose","ImageThumb","MainInfo","AccessoriesWrap","Options","accessories","description","rentalConditions","fuelConsumption","engineSize","addrArray","idOptions","nanoid","_Fragment","item","index","substr"],"sourceRoot":""}